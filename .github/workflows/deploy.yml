name: Deploy to AWS ECR

on:
  push:
    branches:
      - main  # Runs the workflow when you push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set Environment Variables
        run: |
          echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY }}" >> $GITHUB_ENV

      - name: Create .env File
        run: |
           echo "PORT=${{ secrets.PORT }}" >> Server/.env
           echo "MONGO_URL=${{ secrets.MONGO_URL }}" >> Server/.env
           echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> Server/.env
           echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> Server/.env
           echo "SESSION_SECRET=${{ secrets.SESSION_SECRET }}" >> Server/.env
           echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> Server/.env
           echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> Server/.env
           echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> Server/.env
        shell: bash



      - name: Build and Tag Docker Image
        run: |
          cd Server
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Push Docker Image to AWS ECR
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
